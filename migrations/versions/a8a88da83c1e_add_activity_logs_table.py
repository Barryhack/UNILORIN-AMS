"""Add activity_logs table

Revision ID: a8a88da83c1e
Revises: create_schema
Create Date: 2025-01-14 18:33:29.617049

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a8a88da83c1e'
down_revision = 'create_schema'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('login_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('details', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('link', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lecture_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('marked_by_id', sa.Integer(), nullable=True),
    sa.Column('verification_method', sa.String(length=20), nullable=True),
    sa.Column('verification_data', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['lecture_id'], ['lectures.id'], ),
    sa.ForeignKeyConstraint(['marked_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('attendance')
    op.drop_table('system_settings')
    with op.batch_alter_table('course_students', schema=None) as batch_op:
        batch_op.add_column(sa.Column('enrolled_at', sa.DateTime(), nullable=True))
        batch_op.drop_column('enrollment_date')

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('users_login_id_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_users_login_id'), ['login_id'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_login_id'))
        batch_op.create_unique_constraint('users_login_id_key', ['login_id'])

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('description')

    with op.batch_alter_table('course_students', schema=None) as batch_op:
        batch_op.add_column(sa.Column('enrollment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_column('enrolled_at')

    op.create_table('system_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='system_settings_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='system_settings_updated_by_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='system_settings_pkey'),
    sa.UniqueConstraint('key', name='system_settings_key_key')
    )
    op.create_table('attendance',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('lecture_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('marked_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('verification_method', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lecture_id'], ['lectures.id'], name='attendance_lecture_id_fkey'),
    sa.ForeignKeyConstraint(['marked_by_id'], ['users.id'], name='attendance_marked_by_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='attendance_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attendance_pkey')
    )
    op.drop_table('attendances')
    op.drop_table('notifications')
    op.drop_table('login_logs')
    op.drop_table('activity_logs')
    # ### end Alembic commands ###
